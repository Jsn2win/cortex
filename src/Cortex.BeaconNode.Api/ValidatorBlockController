using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Net.Mime;
using Microsoft.Extensions.Hosting;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;

namespace Cortex.BeaconNode.Api
{
    [ApiController]
    [Produces(MediaTypeNames.Application.Json)]
    [Route("validator/block")]
    public class ValidatorBlockController : ControllerBase
    {
        private readonly ILogger _logger;

        public ValidatorBlockController(ILogger<NodeVersionController> logger)
        {
            _logger = logger;
        }

        [HttpGet()]
        /// <summary>Produce a new block, without signature.</summary>
        public ActionResult<string> Get(
            ulong slot, 
            string ranDaoReveal // byte[96] in hex (0x...)
            ) 
        {
            _logger.LogDebug("Block request");
            return _versionString;
        }
    }

    public class BeaconBlockCommon
    {
        public ulong Slot { get; }
        public string ParentRoot { get; } // byte[32] in hex (0x...)
        public string StateRoot { get; } // byte[32] in hex (0x...)
        public string Signature { get; } // byte[96] in hex (0x...)
    }

    public class BeaconBlock : BeaconBlockCommon
    {
        public BeaconBlockBody Body { get; }
    }

    public class BeaconBlockBody
    {
        public string RanDaoReveal { get; } // byte[96] in hex (0x...)
        public Eth1Data Eth1Data { get; }
        public string Graffiti { get; } // byte[32] in hex (0x...)
        public ProposerSlashing[] ProposerSlashings { get; }
        public AttesterSlashing[] AttesterSlashings { get; }
        public Attestation[] Attestations { get; }
    }

    public class Eth1Data 
    {
        public string DepositRoot { get; } // byte[32] in hex (0x...)
        public ulong DepositCount { get; }
        public string BlockHash { get; } // byte[32] in hex (0x...)
    }

    public class ProposerSlashing
    {
        public ulong ProposerIndex { get; }
        public BeaconBlockHeader Header1 { get; }
        public BeaconBlockHeader header2 { get; }
    }

    public class BeaconBlockHeader : BeaconBlockCommon
    {
        public string BodyRoot { get; } // byte[32] in hex (0x...)
    }

    public class AttesterSlashing
    {
        public IndexedAttestation Attestation1 { get; }
        public IndexedAttestation Attestation1 { get; }
    }

    public class Attestation
    {
        public string AggregationBits { get; } // byte 0x...
        public string CustodyBits { get; } // byte 0x...
        public string Signature { get; } // byte[96] in hex (0x...)
        public AttestationData Data { get; }
    }

    public 
}